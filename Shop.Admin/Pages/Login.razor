@page "/login";
@using Shop.DataModels.CustomModels
@inject NavigationManager navManager;
@using Shop.Admin.Services;
@inject IAdminPanelService adminPanelService;

<div style="min-height:400px">
    <div class="loginBox">
        <div class="box">
            <br />
            <h1>Admin Panel</h1>
            @if(loginModel != null)
            {
                <EditForm Model="@loginModel" OnValidSubmit="Login_Click">
                    <DataAnnotationsValidator/>

                    <InputText type="email" name="email" class="email" placeholder="email"
                               @bind-Value="loginModel.EmailId" autocomplete="off" />
                    <ValidationMessage For="@(() => loginModel.EmailId)" />

                    <InputText type="password" name="password" class="password"
                               placeholder="password" @bind-Value="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />

                    <br/><br/>

                    <input type="submit" class="btn btn-primary" value="Login" />
                </EditForm>
            }
        </div>
        <br />
        <br />
        <p style="color:#e52e50">
            <h4>@alertMessage</h4>
        </p>
    </div>
</div>


@code {

    public LoginModel loginModel { get; set; }

    public string alertMessage { get; set; }

    protected override Task OnInitializedAsync()
    {
        loginModel = new LoginModel();
        return base.OnInitializedAsync();    
    } 

    private async Task Login_Click()
    {
        var response = await adminPanelService.AdminLogin(loginModel);
        if(response.Status == true)
        {
            navManager.NavigateTo("/");
        }
        else
        {
            alertMessage = response.Message;
        }
    }
}
